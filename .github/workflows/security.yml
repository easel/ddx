name: Security

on:
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC
  push:
    branches: [ main, develop ]
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
      - '.github/workflows/security.yml'
  pull_request:
    branches: [ main ]
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
  workflow_dispatch:  # Manual trigger

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  # Secret scanning
  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for comprehensive scanning
    
    - name: TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: ${{ github.event.repository.default_branch }}
        head: HEAD
        extra_args: --debug --only-verified
    
    - name: Gitleaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Check for hardcoded secrets in Go code
      run: |
        # Custom checks for Go-specific patterns
        found=0
        if grep -r --include="*.go" -E "(password|secret|token|key)\s*:?=\s*\"[^\"]{8,}\"" . | grep -v test | grep -v example; then
          echo "⚠️ Potential hardcoded secrets found in Go files"
          found=1
        fi
        if [ $found -eq 0 ]; then
          echo "✅ No hardcoded secrets detected in Go files"
        fi
        exit $found

  # Dependency vulnerability scanning
  dependency-scan:
    name: Dependency Scanning
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cli
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache-dependency-path: cli/go.sum
    
    - name: Dependency Review
      if: github.event_name == 'pull_request'
      uses: actions/dependency-review-action@v4
      with:
        base-ref: ${{ github.event.pull_request.base.sha || github.ref }}
        head-ref: ${{ github.event.pull_request.head.sha || github.sha }}
    
    - name: Nancy vulnerability scan
      run: |
        go install github.com/sonatype-nexus-community/nancy@latest
        go list -json -deps | nancy sleuth --quiet || exit_code=$?
        if [ "${exit_code:-0}" -ne 0 ]; then
          echo "⚠️ Vulnerabilities found in dependencies"
          go list -json -deps | nancy sleuth
          exit 1
        fi
        echo "✅ No known vulnerabilities in dependencies"
    
    - name: Go vulnerability check
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./... || exit_code=$?
        if [ "${exit_code:-0}" -ne 0 ]; then
          echo "⚠️ Vulnerabilities detected"
          exit 1
        fi
        echo "✅ No vulnerabilities detected by govulncheck"
    
    - name: License check
      run: |
        go install github.com/google/go-licenses@latest
        go-licenses check ./... --ignore github.com/easel/ddx || exit_code=$?
        if [ "${exit_code:-0}" -ne 0 ]; then
          echo "⚠️ License issues detected"
          exit 1
        fi
        echo "✅ All dependency licenses are compatible"

  # Static Application Security Testing (SAST)
  sast:
    name: Static Analysis Security Testing
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache-dependency-path: cli/go.sum
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: go
        queries: security-and-quality
    
    - name: Build for CodeQL
      working-directory: cli
      run: go build ./...
    
    - name: CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:go"
    
    - name: Run gosec security scanner
      run: |
        go install github.com/securego/gosec/v2/cmd/gosec@latest
        gosec -fmt sarif -out gosec-results.sarif ./cli/... || true
    
    - name: Upload gosec results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: gosec-results.sarif

  # Container scanning (if Dockerfile exists)
  container-scan:
    name: Container Security
    runs-on: ubuntu-latest
    if: hashFiles('**/Dockerfile') != ''
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        severity: 'CRITICAL,HIGH,MEDIUM'
    
    - name: Upload Trivy results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  # Aggregate results
  security-summary:
    name: Security Summary
    needs: [secret-scan, dependency-scan, sast]
    if: always()
    runs-on: ubuntu-latest
    steps:
    - name: Check results
      run: |
        echo "## Security Scan Summary"
        echo ""
        
        # Check each job result
        if [ "${{ needs.secret-scan.result }}" = "success" ]; then
          echo "✅ Secret scanning: Passed"
        else
          echo "❌ Secret scanning: Failed"
        fi
        
        if [ "${{ needs.dependency-scan.result }}" = "success" ]; then
          echo "✅ Dependency scanning: Passed"
        else
          echo "❌ Dependency scanning: Failed"
        fi
        
        if [ "${{ needs.sast.result }}" = "success" ]; then
          echo "✅ SAST: Passed"
        else
          echo "❌ SAST: Failed"
        fi
        
        # Overall result
        if [ "${{ needs.secret-scan.result }}" != "success" ] || \
           [ "${{ needs.dependency-scan.result }}" != "success" ] || \
           [ "${{ needs.sast.result }}" != "success" ]; then
          echo ""
          echo "⚠️ Security checks failed. Please review the results above."
          exit 1
        fi
        
        echo ""
        echo "✅ All security checks passed!"